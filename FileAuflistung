package architekturProjekt;


import java.io.File;
import java.io.FilenameFilter;

public class FileAuflistung {

    DatenQuelle datenQuelle = new DatenQuelle();
    FormatCounter formatCounter = new FormatCounter();
    int anzahlCSVFormate;
    int anzahljsonFormate;
    int anzahlXmlFormate;
    long fileGroeße;

    public void gebeAlleFilesAus(){

        try {

            File[] files = datenQuelle.schreibtischfile.listFiles();

            System.out.println("Files are:");
            System.out.println("-----------------");

            for (int i = 0; i < files.length; i++) {
                System.out.println(files[i].getName());
            }
        }  catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }

    public void gebeAnzahlFormate(){



               if(datenQuelle.schreibtischfile.getName().endsWith("csv") == true){
                    anzahlCSVFormate++;
                }
        System.out.println(anzahlCSVFormate);


    }

    public int gebeAlleCSVDaten(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("csv");
            }

        });
        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateigröße: " + f.length());


            if(f.getName().endsWith("csv")){
                anzahlCSVFormate++;
            }

        }

        System.out.println("Anzahl CSV Daten: " + anzahlCSVFormate);
        return anzahlCSVFormate;
    }
    public int gebeJsonAus(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("json");
            }

        });
        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateigröße: " + f.length());


            if(f.getName().endsWith("json")){
                anzahljsonFormate++;
            }

        }

        System.out.println("Anzahl JSON: " + anzahljsonFormate);
        return anzahljsonFormate;
    }

    public int gebeXmlAus(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("xml");
            }

        });
        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateigröße: " + f.length());


            if(f.getName().endsWith("xml")){
                anzahlXmlFormate++;
            }

        }

        System.out.println("Anzahl XML: " + anzahlXmlFormate);
        return anzahlXmlFormate;
    }

    public double gebeDateiVolumenCSV(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("csv");
            }

        });

        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateivolumen CSV: " + f.length());


            if(f.getName().endsWith("csv")){
                anzahlXmlFormate++;
            }

        }
        return files.length;
    }

    public double gebeDateiVolumenJSON(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("json");
            }

        });

        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateivolumen Json: " + f.length());


            if(f.getName().endsWith("json")){
                anzahljsonFormate++;
            }

        }
        return files.length;
    }

    public double gebeDateiVolumenXML(){

        File[] files = datenQuelle.schreibtischfile.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith("xml");
            }

        });

        for(File f : files){
            System.out.println(f.getName());
            //Dateigröße
            System.out.println("Dateivolumen XML: " + f.length());


            if(f.getName().endsWith("xml")){
                anzahlXmlFormate++;
            }

        }
        return files.length;
    }


}
